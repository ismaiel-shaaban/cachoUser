import React, { Fragment } from "react";
import styles from "./OffersTabComponent.module.css";
import Image from "next/image";
import images from "src/Assets/images";
import OffersListing from "./OffersListing/OffersListing";
import useVendorOffersQuery from "../../Hooks/useVendorOffersQuery";
import useAuthValue from "src/Modules/AuthModule/Hooks/useAuthValue";
import { useRouter } from "next/router";
import Pagination from "src/Components/Pagination/Pagination";
import { filterUrlData } from "src/Utils/Helpers";
import { strings } from "src/Utils/Localization";

function OffersTabComponent(props: any) {
  const { vendorDetails } = props;
  const router = useRouter();
  const page = router?.query?.page ? Number(router?.query?.page) : 1;
  const vendorOffersQuery = useVendorOffersQuery(vendorDetails?.vendorId?._id, page);
  const vendorOffers = vendorOffersQuery?.data?.data?.data;
  const countPage: number = vendorOffers?.count ?? 0;
  const limitPage: number = vendorOffers?.limit ?? 0;
  const totalPages = Math.ceil(countPage / limitPage);
  const routerName =
    router.asPath?.split("?")[0] == "/vendor-shop-details"
      ? `vendor-shop-details`
      : `vendor-detail`;
  return (
    <>
      {vendorOffers?.list?.length  !== 0 ? (
        <div className={styles.cardListing}>
          {vendorOffers?.list?.map((item) => {
            return <OffersListing item={item} />;
          })}
        </div>
      ) : (
        <div className={styles.noActiveOffers}>
          <svg xmlns="http://www.w3.org/2000/svg" width="121" height="126" viewBox="0 0 121 126" fill="none">
            <path fill-rule="evenodd" clip-rule="evenodd" d="M7.95 25.5254C3.55934 26.0186 0.399813 29.9778 0.893009 34.3685L10.4116 119.107C10.5491 120.332 10.9561 121.46 11.5669 122.441C13.014 120.72 15.1505 119.515 17.6297 119.237C21.5366 118.798 25.1243 120.791 26.7127 123.951C27.5604 120.517 30.6165 117.778 34.5234 117.339C38.4304 116.9 42.018 118.893 43.6065 122.054C44.4541 118.619 47.5102 115.88 51.4172 115.441C55.3242 115.003 58.9118 116.995 60.5003 120.156C61.222 117.232 63.5447 114.812 66.6306 113.886C66.6389 113.528 66.6232 113.164 66.582 112.798L57.0635 28.0589C56.5703 23.6683 52.6111 20.5087 48.2205 21.0019L7.95 25.5254Z" fill="#C1DFFF"/>
            <path fill-rule="evenodd" clip-rule="evenodd" d="M112.695 25.5254C117.086 26.0186 120.245 29.9778 119.752 34.3685L110.233 119.107C110.096 120.332 109.689 121.46 109.078 122.441C107.631 120.72 105.494 119.515 103.015 119.237C99.1084 118.798 95.5207 120.791 93.9323 123.951C93.0846 120.517 90.0286 117.778 86.1216 117.339C82.2146 116.9 78.627 118.893 77.0385 122.054C76.1909 118.619 73.1348 115.88 69.2278 115.441C65.3209 115.003 61.7332 116.995 60.1448 120.156C59.423 117.232 57.1003 114.812 54.0144 113.886C54.0061 113.528 54.0218 113.164 54.063 112.798L63.5815 28.0589C64.0747 23.6683 68.0339 20.5087 72.4246 21.0019L112.695 25.5254Z" fill="#9BB2D0"/>
            <path fill-rule="evenodd" clip-rule="evenodd" d="M32.3223 0C27.904 0 24.3223 3.58173 24.3223 8V120.211C24.9655 120.073 25.6349 120 26.3223 120C30.2538 120 33.5966 122.381 34.8223 125.699C36.048 122.381 39.3907 120 43.3223 120C47.2538 120 50.5966 122.381 51.8223 125.699C53.048 122.381 56.3907 120 60.3223 120C64.2538 120 67.5966 122.381 68.8223 125.699C70.048 122.381 73.3907 120 77.3223 120C81.2538 120 84.5966 122.381 85.8223 125.699C87.048 122.381 90.3907 120 94.3223 120C95.0097 120 95.679 120.073 96.3223 120.211V8C96.3223 3.58172 92.7405 0 88.3223 0H32.3223Z" fill="#D9E7F6"/>
            <path d="M47.5321 82L69.5201 49.8H74.0281L52.0401 82H47.5321ZM50.2001 67.142C48.6974 67.142 47.3634 66.774 46.1981 66.038C45.0327 65.302 44.1281 64.2747 43.4841 62.956C42.8401 61.6374 42.5181 60.0887 42.5181 58.31C42.5181 56.5314 42.8401 54.9827 43.4841 53.664C44.1281 52.3454 45.0327 51.318 46.1981 50.582C47.3634 49.846 48.6974 49.478 50.2001 49.478C51.7641 49.478 53.1134 49.846 54.2481 50.582C55.4134 51.318 56.3181 52.3454 56.9621 53.664C57.6061 54.9827 57.9281 56.5314 57.9281 58.31C57.9281 60.0887 57.6061 61.6374 56.9621 62.956C56.3181 64.2747 55.4134 65.302 54.2481 66.038C53.1134 66.774 51.7641 67.142 50.2001 67.142ZM50.2461 63.922C51.4727 63.922 52.4234 63.4467 53.0981 62.496C53.8034 61.5147 54.1561 60.1194 54.1561 58.31C54.1561 56.5007 53.8034 55.1207 53.0981 54.17C52.4234 53.1887 51.4727 52.698 50.2461 52.698C49.0194 52.698 48.0381 53.1887 47.3021 54.17C46.5967 55.1514 46.2441 56.5314 46.2441 58.31C46.2441 60.0887 46.5967 61.4687 47.3021 62.45C48.0381 63.4314 49.0194 63.922 50.2461 63.922ZM71.3141 82.322C69.8114 82.322 68.4774 81.954 67.3121 81.218C66.1467 80.482 65.2421 79.4547 64.5981 78.136C63.9541 76.8174 63.6321 75.2687 63.6321 73.49C63.6321 71.7114 63.9541 70.1627 64.5981 68.844C65.2421 67.5254 66.1467 66.498 67.3121 65.762C68.4774 65.026 69.8114 64.658 71.3141 64.658C72.8781 64.658 74.2274 65.026 75.3621 65.762C76.5274 66.498 77.4321 67.5254 78.0761 68.844C78.7201 70.1627 79.0421 71.7114 79.0421 73.49C79.0421 75.2687 78.7201 76.8174 78.0761 78.136C77.4321 79.4547 76.5274 80.482 75.3621 81.218C74.2274 81.954 72.8781 82.322 71.3141 82.322ZM71.3141 79.102C72.5407 79.102 73.5067 78.6114 74.2121 77.63C74.9174 76.6487 75.2701 75.2687 75.2701 73.49C75.2701 71.7114 74.9174 70.3314 74.2121 69.35C73.5067 68.3687 72.5407 67.878 71.3141 67.878C70.1181 67.878 69.1521 68.3687 68.4161 69.35C67.7107 70.3007 67.3581 71.6807 67.3581 73.49C67.3581 75.2994 67.7107 76.6947 68.4161 77.676C69.1521 78.6267 70.1181 79.102 71.3141 79.102Z" fill="#9BB2D0"/>
          </svg>
          <h3 className="text-[#5A5A5A;] text-[16px] font-[400]">{strings?.no_active_offers}</h3>
        </div>
      )}
      {vendorOffers?.list?.length !== 0 && vendorOffers?.list !== undefined ? (
        <Pagination
          page={page}
          setPage={(_page: any) => {
            filterUrlData(router, routerName, "page", _page.toString());
          }}
          totalPages={totalPages}
        />
      ) : (
        <Fragment />
      )}
    </>
  );
}

export default OffersTabComponent;
